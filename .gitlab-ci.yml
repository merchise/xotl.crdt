---
stages:
  - pre-check
  - build doc
  - publish doc
  - test
  - check
  - build
  - publish

check code smells:
  image: python:3.6-alpine
  script:
    - |
      pip install "flake8~=3.7.9" "flake8-bugbear~=19.8.0"
      flake8 xotl/crdt/ tests/
  stage: pre-check
  allow_failure: true
  only:
    - main
    - merge_requests

.run_tox_tests: &run_tox_tests
  image: python:$PYTHON-alpine
  stage: test
  script:
    - pip install tox
    - tox -e system-unit

.run_tox_staticcheck: &run_tox_staticcheck
  image: python:3.8
  stage: pre-check
  script:
    - pip install tox
    - tox -e 3.8-staticcheck

.run_tox_doctest: &run_tox_doctest
  image: python:3.8-alpine
  stage: test
  script:
    - pip install tox
    - tox -e 3.8-doctest

run tests with Python 3.6:
  <<: *run_tox_tests
  variables:
    PYTHON: "3.6"
  only:
    - main
    - merge_requests

run tests with Python 3.7:
  <<: *run_tox_tests
  variables:
    PYTHON: "3.7"
  only:
    - main
    - merge_requests

run tests with Python 3.8:
  <<: *run_tox_tests
  variables:
    PYTHON: "3.8"
  only:
    - main
    - merge_requests
  allow_failure: false

run tests with Python 3.9:
  <<: *run_tox_tests
  variables:
    PYTHON: "3.9"
  only:
    - main
    - merge_requests
  allow_failure: false


run static checks:
  <<: *run_tox_staticcheck
  only:
    - main
    - merge_requests

run doctests:
  <<: *run_tox_doctest
  only:
    - main
    - merge_requests


run coverage tests:
  image: python:3.8-alpine
  stage: test
  script:
    - pip install tox
    - tox -e 3.8-coverage
  allow_failure: true
  only:
    - main
    - merge_requests


check signature of tag:
  image: alpine
  stage: check
  script:
    - apk add git gnupg
    - cat $GNUPG_KEY_FILE | gpg --import
    - git verify-tag $CI_COMMIT_REF_NAME
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^\d+(\.\d+)*(|a\d+|b\d+|rc\d+)?(\.post\d+|\.dev\d+)?$/

build source distribution:
  image: python:3.6-alpine
  stage: build
  script:
    - rm -f dist/*
    - python setup.py sdist
  artifacts:
    paths:
      - dist/
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^\d+(\.\d+)*(|a\d+|b\d+|rc\d+)?(\.post\d+|\.dev\d+)?$/

build binary distribution:
  image: python:3.6-alpine
  stage: build
  script:
    - pip install wheel
    - python setup.py bdist_wheel
  artifacts:
    paths:
      - dist/
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^\d+(\.\d+)*(|a\d+|b\d+|rc\d+)?(\.post\d+|\.dev\d+)?$/


publish_pypi:
  image: python:3.8-alpine
  stage: publish
  script:
    - pip install twine
    - twine upload -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" dist/*
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^\d+(\.\d+)*(|a\d+|b\d+|rc\d+)?(\.post\d+)?$/
  dependencies:
    - check signature of tag
    - build source distribution
    - build binary distribution
  environment:
    name: pypi
    url: https://pypi.python.org/pypi/$CI_PROJECT_NAME


.build_doc: &build_documentation
  image: python:3.8-alpine
  script:
    - |
      apk add make git
      pip install -U sphinx sphinx-rtd-theme
      pip install -e .
      make -C docs/ html
      mkdir -p public
      cp -rf docs/build/html/* public/

pages:
  <<: *build_documentation
  stage: build
  needs: []
  artifacts:
    paths:
      - public
  only:
    - main
